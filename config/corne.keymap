#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        comma_qmark: comma_question_mark {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_excl: dot_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCLAMATION";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        plus_equal: plus_equal {
            compatible = "zmk,behavior-mod-morph";
            label = "PLUS_EQUAL";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        semi_colon_combo: semi_colon_combo {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMI_COLON_COMBO";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&caps_word_toggle>;
        };

    };

    combos {
        compatible = "zmk,combos";

        combo_semicolon {
            timeout-ms = <50>;
            key-positions = <33 32>; // Comma and period
            bindings = <&semi_colon_combo>;
            layers = <0 4>;  // Active in both QWERTY and Colemak
        };

        combo_play_pause {
            timeout-ms = <50>;
            key-positions = <28 27>; // Prev and next in controls layer
            bindings = <&kp C_PP>;
            layers = <3>;
        };

        combo_mute {
            timeout-ms = <50>;
            key-positions = <16 15>; // Volume down and up in controls layer
            bindings = <&kp C_MUTE>;
            layers = <3>;
        };

        combo_pipe {
            timeout-ms = <50>;  // How long you have to press both keys
            key-positions = <34 35>;  // Replace with your actual key positions
            bindings = <&kp PIPE>;  // This outputs the pipe character
        };
    };

    macros {
        desktop1: desktop1 {
            label = "DESKTOP_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp KP_N1>,
                <&macro_release>,
                <&kp LGUI>;
        };

        desktop2: desktop2 {
            compatible = "zmk,behavior-macro";
            label = "DESKTOP_2";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp KP_N2>,
                <&macro_release>,
                <&kp LGUI>;
        };

        ctrl_alt_del: ctrl_alt_del {
            label = "CTRL_ALT_DEL";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LALT>,
                <&macro_tap>,
                <&kp DEL>,
                <&macro_release>,
                <&kp LCTRL &kp LALT>;
        };

        caps_word_toggle: caps_word_toggle {
            label = "CAPS_WORD_TOGGLE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&caps_word>;
        };


        // Windows/Apps key combos
        shift_gui_tab: shift_gui_tab {
            label = "SHIFT_GUI_TAB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &kp LGUI>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LSHFT &kp LGUI>;
        };

        shift_alt_tab: shift_alt_tab {
            label = "SHIFT_ALT_TAB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &kp LALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LSHFT &kp LALT>;
        };

        shift_alt_grave: shift_alt_grave {
            label = "SHIFT_ALT_GRAVE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &kp LALT>,
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_release>,
                <&kp LSHFT &kp LALT>;
        };

        alt_tab: alt_tab {
            label = "ALT_TAB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LALT>;
        };

        gui_tab: gui_tab {
            label = "GUI_TAB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LGUI>;
        };

        gui_grave: gui_grave {
            label = "GUI_GRAVE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_release>,
                <&kp LGUI>;
        };


        // Application launcher macros using Ctrl+Alt+Super+Number combinations
        files: files {
            label = "FILES";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp LGUI>,
                <&macro_tap>,
                <&kp N1>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp LGUI>;
        };

        term: term {
            label = "TERMINAL";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp LGUI>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp LGUI>;
        };

        ide: ide {
            label = "IDE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp LGUI>,
                <&macro_tap>,
                <&kp N3>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp LGUI>;
        };

        notes: notes {
            label = "NOTES";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp LGUI>,
                <&macro_tap>,
                <&kp N4>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp LGUI>;
        };

        browsera: browsera {
            label = "BROWSER_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp LGUI>,
                <&macro_tap>,
                <&kp N5>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp LGUI>;
        };

        browserb: browserb {
            label = "BROWSER_B";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp LGUI>,
                <&macro_tap>,
                <&kp N6>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp LGUI>;
        };

        browserc: browserc {
            label = "BROWSER_C";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp LGUI>,
                <&macro_tap>,
                <&kp N7>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp LGUI>;
        };  

    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&kp ESC           &kp Q  &kp W  &kp E           &kp R      &kp T    &kp Y  &kp U      &kp I          &kp O      &kp P          &kp RGUI
&kp TAB           &kp A  &kp S  &kp D           &kp F      &kp G    &kp H  &kp J      &kp K          &kp L      &kp BACKSPACE  &kp DEL
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C           &kp V      &kp B    &kp N  &kp M      &comma_qmark   &dot_excl  &kp MINUS      &kp SINGLE_QUOTE
                                &kp LEFT_SHIFT  &kp SPACE  &mo 1    &mo 2  &kp ENTER  &kp RIGHT_ALT
            >;
        };

        syms_layer {
            bindings = <
&kp F1     &kp F2             &kp F3        &kp F4        &kp F5        &kp F6           &kp F7          &kp F8           &kp F9         &kp F10               &kp F11                &kp F12
&files     &term              &ide          &notes        &none         &kp LGUI         &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LESS_THAN  &kp GREATER_THAN      &kp LEFT_BRACKET       &kp RIGHT_BRACKET
&trans     &browsera          &browserb     &browserc     &none         &kp PRINTSCREEN  &none           &none            &none          &none                 &kp BACKSLASH          &kp SLASH
                                            &trans        &none         &trans           &mo 3           &kp RIGHT_SHIFT     &trans
            >;
        };

        navnum_layer {
            bindings = <
&kp GRAVE   &kp NUMBER_1     &kp NUMBER_2     &kp NUMBER_3      &kp NUMBER_4     &kp NUMBER_5       &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp EQUAL
&desktop2   &desktop2        &shift_gui_tab   &shift_alt_grave  &alt_grave       &gui_tab           &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp HOME      &kp END
&trans      &none            &none            &shift_alt_tab    &alt_tab         &none              &kp LC(LEFT)  &kp PG_DN     &kp PG_UP     &kp LC(RIGHT) &kp LC(HOME)  &kp LC(END)
                             &trans           &kp LEFT_ALT      &mo 4            &trans             &none         &none
            >;
        };

        controls_layer {
            bindings = <
&none        &none          &none        &none         &none         &none     &none   &none   &none   &none    &none    &none
&kp C_POWER  &ctrl_alt_del  &kp C_SLEEP  &kp C_VOL_DN  &kp C_VOL_UP  &none     &none   &none   &none   &none    &none    &none
&bootloader  &sys_reset     &none        &kp C_PREV    &kp C_NEXT    &none     &none   &none   &none   &none    &none    &none
                                         &trans        &none         &none     &none   &none   &none
            >;
        };

        /*
        colemak_layer {
            bindings = <
&kp ESC           &kp Q  &kp W  &kp F        &kp P      &kp B    &kp J  &kp L      &kp U          &kp Y      &kp BACKSPACE  &kp DEL
&kp LEFT_GUI      &kp A  &kp R  &kp S        &kp T      &kp G    &kp M  &kp N      &kp E          &kp I      &kp O          &kp TAB
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C        &kp D      &kp V    &kp K  &kp H      &comma_qmark   &dot_excl  &kp MINUS      &kp SINGLE_QUOTE
                                &shift_caps  &kp SPACE  &mo 1    &mo 2  &kp ENTER  &kp RIGHT_ALT
            >;
        };
*/
    };
};
